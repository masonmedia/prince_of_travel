---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from "astro:content";
// const allPosts = await Astro.glob('../../pages/blog/*.md');
const newsPosts = await getCollection("news");
// astro.glob => getCollection is the difference between getting all files from a directory in pages vs. collections
// https://docs.astro.build/en/tutorials/add-content-collections/
import functions from '../../js/functions.js';

import PostFetch from "../../components/VueComponents/PostFetch.vue"

const { index, slug } = Astro.props

const slideAnim = {
  old: {
    name: 'slideDown',
    duration: '0.5s',
    easing: 'ease-out',
    fillMode: 'backwards',
  },
  new: {
    name: 'slideUp',
    duration: '0.5s',
    delay: `${index * 0.2 + 0.1}s`,
    easing: 'ease-out',
    fillMode: 'backwards',
  },
}
const verticalSlide = {
  forwards: slideAnim,
  backwards: slideAnim,
}


const res = await fetch("https://pftraveldev.wpengine.com/wp-json/wp/v2/posts?categories=942,1&_embed&per_page=100");
const posts = await res.json();

// const combinedPosts = allPosts.concat(posts);

// let filteredPosts = allPosts.filter(post => post.data.draft === false)
// filteredPosts.sort((a, b) => b.data.pubDate - a.data.pubDate);
// const [firstArticle, ...allArticles] = filteredPosts;
const [firstArticle, ...allArticles] = newsPosts;

// bit-alaska post had a cross at the end of the url which threw a build error in netlify
function removeSpecialCharactersFromURL(url) {
    // Define a regular expression to match special characters
	const regex = /[^\w\s\-#]/gi;
    // Replace special characters with an empty string
    const cleanURL = url.replace(regex, '');
    return cleanURL;
}
---

<Layout title="Prince Collection | News" description="Prince Collection's latest news, deals, and happenings in the travel space." image={firstArticle.data.imageUrl}>

	<div class="container-fluid">
		<!-- <div class="row">
			<div class="col-lg-12">
			<PostFetch client:visible class="min-vh-100" />
			</div>
		</div> -->
		<div class="row" id="scrollEffect">
			<div class="col-lg-6 left-side">

				<div class="row p-3">
					{posts.slice(0,5).map((item, index) => (
					<div class="col-lg-12 p-4">
						<img src={item._embedded['wp:featuredmedia'][0].source_url || item.data.imageUrl} class="w-100" style="object-fit: cover;" alt="">
						<h1 class="text-body-secondary fw-bold lh-1 mb-3 mt-4">{item.title.rendered}</h1>
						<div class="col-md-10 fs-5 text-body-secondary mt-0 mb-2"><Fragment set:html={functions.shorten(item.excerpt.rendered, 150)} /></div>
						<div class="py-2">
							<p class="small text-pc-dark text-uppercase fw-bold my-0"><span class="fw-light text-secondary">Written by</span> {item._embedded?.author[0].name || item.data.author}</p>
							<p class="small text-pc-dark text-uppercase fw-bold my-0"><span class="fw-light text-secondary">On</span> {item.date.toString().slice(0,10) || item.data.pubDate.toString().slice(0,10)}</p>
						</div>
						<a href={`/news/${removeSpecialCharactersFromURL(item.slug)}/`}>
							<button class="btn btn-dark fw-bold rounded-pill px-4 mt-3 shadow">Read article</button>
						</a>
					</div>
					))}
					
				</div>
			</div>

			<div class="col-lg-6 p-5 right-side">
				<div class="col-lg-12 py-5">
					<h1 class="display-2 fw-bold">News</h1>
				</div>
				<div class="row g-5">
					{posts.slice(5,14).map((item, index) => (
					<div class="col-lg-6">
						<img src={item._embedded['wp:featuredmedia'][0].source_url || item.data.imageUrl} class="w-100 rounded-top-4" style="object-fit: cover;" alt="">
						<h1 class="fs-5 text-body-secondary fw-bold">{item.title.rendered}</h1>
						<p class="col-md-8 fs-5 text-body-secondary my-0"><Fragment set:html={functions.shorten(item.excerpt.rendered, 100) + '...'}/></p>
						<div class="py-2">
							<p class="small text-pc-dark text-uppercase fw-bold my-0"><span class="fw-light text-secondary">Written by</span> {item._embedded?.author[0].name || item.data.author}</p>
							<p class="small text-pc-dark text-uppercase fw-bold my-0"><span class="fw-light text-secondary">On</span> {item.date.toString().slice(0,10) || item.data.pubDate.toString().slice(0,10)}</p>
						</div>
						<a href={`/news/${removeSpecialCharactersFromURL(item.slug)}/`}>
							<button class="btn btn-dark rounded-pill px-4 mt-2">Read article</button>
						</a>
					</div>
					))}
					
				</div>
			</div>
		</div>
	</div>

	<div class="container-fluid px-0 content-below">
		<div class="row min-vh-100 bg-light">
			<div class="col-lg-6 d-flex flex-column justify-content-center align-items-center min-vh-500 text-center p-5 mt-5 mt-lg-0 animate-in">
				<span class="badge rounded-pill fw-bold text-bg-secondary py-2 px-4">News</span>
				<h1 class="col-lg-10 text-body-secondary fw-bold lh-1 mb-2" style="font-size: 11vmin;">{firstArticle.data.title}</h1>
				<p class="col-md-8 fs-5 text-body-secondary mt-0 mb-2">{functions.shorten(firstArticle.data.description, 150) + '...'}</p>
				<div class="py-2">
					<p class="small text-pc-dark text-uppercase fw-bold my-0"><span class="fw-light text-secondary">Written by</span> {firstArticle.data.author}</p>
					<p class="small text-pc-dark text-uppercase fw-bold my-0"><span class="fw-light text-secondary">On</span> {firstArticle.data.pubDate.toString().slice(0,10)}</p>
				</div>
				<a href={`/news/${removeSpecialCharactersFromURL(firstArticle.slug)}/`}>
					<button class="btn btn-dark fw-bold rounded-pill px-4 mt-3 shadow">Read article</button>
				</a>
			</div>
			<div class="col-lg-6">
				<img src={firstArticle.data.imageUrl} class="w-100 h-100" style="object-fit: cover;" alt={firstArticle.data.imageAlt}>
			</div>
		</div>

		<div class="row row-cols-1 row-cols-md-3 row-cols-lg-4 g-3 p-4">
			{allArticles?.map((post) => (
			<div class="col">
				<a href={`/news/${post.slug}/`}>
					<div class="card bg-pc-light rounded-4 p-0 border-0 shadow" style="min-height: 500px">
						<img src="" data-src={post.data.imageUrl} class="card-img-top rounded-top-4 w-100" style="object-fit: cover; height: 200px; filter: brightness(70%)" alt={post.data.imageAlt}>
						<i class="bi bi-arrow-up-right-circle-fill text-pc-10 fs-1 position-absolute top-0 end-0 me-3 mt-2"></i>
						<div class="card-body position-relative px-4 pb-4">
							<p class="small mb-2">{post.data.pubDate.toString().slice(0,10)}</p>
							<h5 class="card-title fw-bold mb-0">{post.data.title}</h5>
							<p class="small m-0 text-secondary mt-2 mb-0">By: {post.data.author}</p>
							<p class="card-text text-body-secondary pe-4">{functions.shorten(post.data.description, 150) + '...'}</p>
						</div>
						<div class="card-footer p-3">
							<div class="d-flex flex-row flex-wrap" style="text-wrap: pretty;">
							{post.data.tags.map((tag) => (
								<p class="small text-pc-dark-80 me-1 my-0">#{tag}</p>
							))}
							</div>
						</div>
					</div>
				</a>
			</div>
			))}

			{posts?.map((post) => (		
			<div class="col">
				<a href={`/news/${removeSpecialCharactersFromURL(post.slug)}/`}>
					<div class="card bg-pc-light rounded-4 p-0 border-0 shadow" style="min-height: 500px">
						<img src="" data-src={post._embedded['wp:featuredmedia'][0].source_url || '/images/general/pc-hotel-palm-trees.jpeg'} class="card-img-top rounded-top-4 w-100" style="object-fit: cover; height: 200px; filter: brightness(70%)" alt="">
						<i class="bi bi-arrow-up-right-circle-fill text-pc-10 fs-1 position-absolute top-0 end-0 me-3 mt-2"></i>
						<div class="card-body position-relative px-4 pb-4">
							<p class="small mb-2">{post.date.toString().slice(0,10)}</p>
							<h5 class="card-title fw-bold mb-0"><Fragment set:html={post.title.rendered} /></h5>
							<p class="small m-0 text-secondary mt-2 mb-0">By: {post._embedded?.author[0].name}</p>
							<p class="card-text text-body-secondary pe-4">{functions.shorten(post.excerpt.rendered, 150) + '...'}</p>
						</div>
					</div>
				</a>
			</div>
			))}		
		</div>
	</div>
</Layout>

<style>
    .scroll-div {
      overflow-y: scroll;
    }

.slow-scroll, .fast-scroll {
    /* width: 50%; Each div occupies 50% of the container width */
    height: 100vh;
    /* overflow: hidden; Hide scrollbar */
    overflow-y: auto;
    -ms-overflow-style: none;  /* IE and Edge */
  scrollbar-width: none;  /* Firefox */
}
/* Hide scrollbar for Chrome, Safari and Opera */
.slow-scroll::-webkit-scrollbar, 
.fast-scroll::-webkit-scrollbar {
  display: none;
}
  </style>


<script>	

// left div scrolls slower than right div; when the end of the content is reached, content
// nelow the effect scrolls into visualViewport, the effect reverses on scrolling up so the
// content out of viewport has to scroll all the way out of viewport before differential scroll begins.

// document.addEventListener("DOMContentLoaded", function() {
//   if (window.innerWidth > 768) {
//     var slowScrollDiv = document.querySelector(".slow-scroll");
//     var fastScrollDiv = document.querySelector(".fast-scroll");
//     var contentBelow = document.querySelector(".content-below");

//     var slowScrollFinished = false;
//     var fastScrollFinished = false;
//     var scrollingUp = false;

//     slowScrollDiv.addEventListener('scroll', function() {
//       // Sync div2 scroll position with div1
//       fastScrollDiv.scrollTop = slowScrollDiv.scrollTop * 0.5; // Adjust scroll speed as needed

//       // Check if slow scroll div has reached the bottom
//       if (slowScrollDiv.scrollHeight - slowScrollDiv.scrollTop === slowScrollDiv.clientHeight) {
//         slowScrollFinished = true;
//         checkScrollFinished();
//       }
//     });

//     // Add scroll event listener to div2
//     fastScrollDiv.addEventListener('scroll', function() {
//       // Sync div1 scroll position with div2
//       slowScrollDiv.scrollTop = fastScrollDiv.scrollTop * 2; // Adjust scroll speed as needed

//       // Check if fast scroll div has reached the bottom
//       if (fastScrollDiv.scrollHeight - fastScrollDiv.scrollTop === fastScrollDiv.clientHeight) {
//         fastScrollFinished = true;
//         checkScrollFinished();
//       }
//     });

//     function checkScrollFinished() {
//       // If both slow and fast scroll divs have finished scrolling, enable scrolling for content below
//       if (slowScrollFinished && fastScrollFinished) {
//         contentBelow.style.overflowY = 'auto';
//         contentBelow.addEventListener('scroll', function() {
//           // Your additional logic here for scrolling content below
//           if (scrollingUp && contentBelow.scrollTop === 0) {
//             // When scrolling back up and content is out of viewport, reset scrolling divs
//             contentBelow.style.overflowY = 'hidden';
//             scrollingUp = false;
//             restartScrollingDivs();
//           }
//         });
//       }
//     }

//     // Listen for scroll event on the content below to detect scrolling direction
//     contentBelow.addEventListener('scroll', function() {
//       if (contentBelow.scrollTop > 0) {
//         scrollingUp = true;
//       } else {
//         scrollingUp = false;
//       }
//     });

//     function restartScrollingDivs() {
//       // Wait for content below to scroll completely out of viewport
//       setTimeout(function() {
//         // Reset scrolling divs
//         slowScrollFinished = false;
//         fastScrollFinished = false;
//         // Restart the slow and fast scrolling divs
//         slowScrollDiv.scrollTop = 0;
//         fastScrollDiv.scrollTop = 0;
//       }, 300); // Adjust this delay as needed to ensure content is fully out of view
//     }
//   } else {
//     return;
//   }
// });

// document.addEventListener('DOMContentLoaded', function() {
//     let leftSide = document.getElementById('left-side');
//     let rightSide = document.getElementById('right-side');

//     window.addEventListener('scroll', function() {
//         // Calculate the scroll speed ratio
//         let scrollSpeedRatio = 0.5; // Adjust as needed
        
//         // Calculate the scroll position of the window
//         let scrollPosition = window.scrollY;

//         // Calculate the scroll position of each side
//         let leftScroll = scrollPosition * scrollSpeedRatio;
//         let rightScroll = scrollPosition;

//         // Apply the scroll position to each side
//         leftSide.style.transform = `translateY(${leftScroll}px)`;
//         rightSide.style.transform = `translateY(${rightScroll}px)`;
//     });
// });



</script>
 