---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import PostBody from '../../components/PostComponents/PostBody.astro';

// i don't know why but the fetch urls need to match exactly to avoid 404 errors rendering dynamic pages
export const prerender = true;
export async function getStaticPaths() {
    const reviewsEntries = await getCollection('reviews');
    let data = await fetch("https://pftraveldev.wpengine.com/wp-json/wp/v2/posts?meta_key=category_name&meta_value=reviews&_embed&per_page=51");
    // let data = await fetch("https://pftraveldev.wpengine.com/wp-json/wp/v2/posts?categories=16&_embed&per_page=50");
    let posts = await data.json();
    const combinedArray = reviewsEntries.concat(posts);

  return combinedArray.map(post => ({
    params: { slug: post.slug }, 
    props: { post }
  }));
}

const { post } = Astro.props;

const allPosts = await getCollection("reviews");
let filteredPosts = allPosts.filter(post => post.data.draft === false)
// const { Content } = await post.render();

// Remove space, add hyphens to titles, convert to lowerCase to be used for hyperlinks
function tableOfContents(str) {
    // Convert the string to lowercase
    let lowercaseStr = str.toLowerCase();
    // Replace spaces with hyphens
    let hyphenatedStr = lowercaseStr.replace(/ /g, '-');
    return hyphenatedStr;
}

// get read time
function wordCount(str) {
  const words = str.match(/(\w+)/g).length;
  const readMins = Math.trunc(words / 250);
  return readMins;
}

// share
// fb share btn
function fbShare() {
  const fbShare = "https://www.facebook.com/sharer/sharer.php?u=";
  const url = `https://princecollection.com${Astro.url.pathname}`;
  const shareButton = fbShare + url;
  return shareButton;
}

// twitter/X share btn
function tweetCurrentPage(title) {
  const twShare = "https://twitter.com/share?url=";
  const url = encodeURIComponent(`https://princecollection.com${Astro.url.pathname}`);
  const twShareButton = twShare + url + '&text=' + title;
  return twShareButton;
}

// email page
function emailPage(title) {
  const href = "mailto:?";
  const url = encodeURIComponent(Astro.url.pathname);
  const emailShare = href + 'subject=' +  title + '&body=' + 'Check out this great post I found from princeoftravel.com: ' + url;
  return emailShare;
}
const url = encodeURIComponent(Astro.url.pathname);

const { index } = Astro.props
const slideAnim = {
  old: {
    name: 'slideDown',
    duration: '0.7s',
    easing: 'linear',
    fillMode: 'forwards',
  },
  new: {
    name: 'slideUp',
    duration: '0.7s',
    delay: `${index * 0.2 + 0.1}s`,
    easing: 'ease-in-out',
    fillMode: 'backwards',
  },
}
const verticalSlide = {
  forwards: slideAnim,
  backwards: slideAnim,
}

// reduce length of post description to closest full word
function shorten(text, max) {
  return text && text.length > max ? text.slice(0, max).split(' ').slice(0, -1).join(' ') : text
}
---

<Layout title={post.title?.rendered || post.data.title} description={post.excerpt?.rendered || post.data.description} image={post.data?.imageUrl || post._embedded['wp:featuredmedia'][0]?.source_url}>

    <PostBody
    category="reviews"
    title={post.title?.rendered || post.data.title}
    backToUrl="reviews"
    backToText="Reviews"
    author={post._embedded?.author[0].name || post.data.author}
    date={post.date?.toString().slice(0,10) || post.data.pubDate.toString().slice(0,10)}
    description={post.excerpt?.rendered || post.data?.description}
    content={wordCount(post.content?.rendered || post.body)} 
    slider={post.data?.carousel == undefined || post.data?.carousel == '' }
    featuredImage={post.data?.imageUrl || post._embedded['wp:featuredmedia'][0].source_url}
    carouselImages={post.data?.carousel}
    tags={post.data?.tags}
    toc={post.data?.contents}
    postContent={post.content?.rendered}
    postBody={post.body}
    fbShare={fbShare()}
    tweetCurrentPage={tweetCurrentPage(post.title?.rendered || post.title)}
    emailPage={emailPage(post.title?.rendered || post.title)}
    />
</Layout>

<script>
// var targetParagraph = document.querySelector('#content .content-body p:nth-of-type(3)');
// var dynamicContent = '<div id="custom-div" class="bg-primary text-light">Nostrud elit qui amet nisi nulla ea ullamco. Nulla aliqua aute et deserunt mollit et deserunt dolor duis Lorem nulla aliquip. Veniam sit voluptate velit quis dolor pariatur anim culpa reprehenderit irure qui sint. Veniam qui sunt proident velit incididunt tempor Lorem in sit laborum officia exercitation culpa dolor.</div>';
// targetParagraph.insertAdjacentHTML('afterend', dynamicContent);

    const toastTrigger = document.getElementById('liveToastBtn');
    const toastLiveExample = document.getElementById('liveToast');
        if (toastTrigger) {
        toastTrigger.addEventListener('click', () => {
            const toast = new bootstrap.Toast(toastLiveExample)
            toast.show();
            navigator.clipboard.writeText("https://princecollection.com" + window.location.pathname);
        })
    }
  </script>